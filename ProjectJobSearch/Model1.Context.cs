//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectJobSearch
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobSearchProjectDBEntities : DbContext
    {
        public JobSearchProjectDBEntities()
            : base("name=JobSearchProjectDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyTab> CompanyTabs { get; set; }
        public virtual DbSet<LoginTab> LoginTabs { get; set; }
        public virtual DbSet<UserTab> UserTabs { get; set; }
        public virtual DbSet<jobstable> jobstables { get; set; }
        public virtual DbSet<ApplyTable> ApplyTables { get; set; }
    
        public virtual int sp_companyreg(Nullable<int> compid, string compname, string compaddr, Nullable<long> compphone, string compemail, string compweb, string comploc)
        {
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            var compnameParameter = compname != null ?
                new ObjectParameter("compname", compname) :
                new ObjectParameter("compname", typeof(string));
    
            var compaddrParameter = compaddr != null ?
                new ObjectParameter("compaddr", compaddr) :
                new ObjectParameter("compaddr", typeof(string));
    
            var compphoneParameter = compphone.HasValue ?
                new ObjectParameter("compphone", compphone) :
                new ObjectParameter("compphone", typeof(long));
    
            var compemailParameter = compemail != null ?
                new ObjectParameter("compemail", compemail) :
                new ObjectParameter("compemail", typeof(string));
    
            var compwebParameter = compweb != null ?
                new ObjectParameter("compweb", compweb) :
                new ObjectParameter("compweb", typeof(string));
    
            var complocParameter = comploc != null ?
                new ObjectParameter("comploc", comploc) :
                new ObjectParameter("comploc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_companyreg", compidParameter, compnameParameter, compaddrParameter, compphoneParameter, compemailParameter, compwebParameter, complocParameter);
        }
    
        public virtual int sp_logininsert(Nullable<int> rid, string una, string pwd, string utype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_logininsert", ridParameter, unaParameter, pwdParameter, utypeParameter);
        }
    
        public virtual int sp_userreg(Nullable<int> uid, string uname, Nullable<int> uag, string uaddr, Nullable<long> uph, string uemail, string uqual, string uskill, Nullable<int> uexp, string uresume)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var uagParameter = uag.HasValue ?
                new ObjectParameter("uag", uag) :
                new ObjectParameter("uag", typeof(int));
    
            var uaddrParameter = uaddr != null ?
                new ObjectParameter("uaddr", uaddr) :
                new ObjectParameter("uaddr", typeof(string));
    
            var uphParameter = uph.HasValue ?
                new ObjectParameter("uph", uph) :
                new ObjectParameter("uph", typeof(long));
    
            var uemailParameter = uemail != null ?
                new ObjectParameter("uemail", uemail) :
                new ObjectParameter("uemail", typeof(string));
    
            var uqualParameter = uqual != null ?
                new ObjectParameter("uqual", uqual) :
                new ObjectParameter("uqual", typeof(string));
    
            var uskillParameter = uskill != null ?
                new ObjectParameter("uskill", uskill) :
                new ObjectParameter("uskill", typeof(string));
    
            var uexpParameter = uexp.HasValue ?
                new ObjectParameter("uexp", uexp) :
                new ObjectParameter("uexp", typeof(int));
    
            var uresumeParameter = uresume != null ?
                new ObjectParameter("uresume", uresume) :
                new ObjectParameter("uresume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userreg", uidParameter, unameParameter, uagParameter, uaddrParameter, uphParameter, uemailParameter, uqualParameter, uskillParameter, uexpParameter, uresumeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_logincount(string userna, string pwd, ObjectParameter status)
        {
            var usernaParameter = userna != null ?
                new ObjectParameter("userna", userna) :
                new ObjectParameter("userna", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_logincount", usernaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginid(string userna, string pwd)
        {
            var usernaParameter = userna != null ?
                new ObjectParameter("userna", userna) :
                new ObjectParameter("userna", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginid", usernaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> sp_logintype(string userna, string pwd)
        {
            var usernaParameter = userna != null ?
                new ObjectParameter("userna", userna) :
                new ObjectParameter("userna", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_logintype", usernaParameter, pwdParameter);
        }
    
        public virtual int sp_jobs(Nullable<int> compid, string jtitle, string jexp, string jskill, Nullable<int> jvac, Nullable<System.DateTime> jdate, string jstatus)
        {
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            var jtitleParameter = jtitle != null ?
                new ObjectParameter("jtitle", jtitle) :
                new ObjectParameter("jtitle", typeof(string));
    
            var jexpParameter = jexp != null ?
                new ObjectParameter("jexp", jexp) :
                new ObjectParameter("jexp", typeof(string));
    
            var jskillParameter = jskill != null ?
                new ObjectParameter("jskill", jskill) :
                new ObjectParameter("jskill", typeof(string));
    
            var jvacParameter = jvac.HasValue ?
                new ObjectParameter("jvac", jvac) :
                new ObjectParameter("jvac", typeof(int));
    
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("jdate", jdate) :
                new ObjectParameter("jdate", typeof(System.DateTime));
    
            var jstatusParameter = jstatus != null ?
                new ObjectParameter("jstatus", jstatus) :
                new ObjectParameter("jstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobs", compidParameter, jtitleParameter, jexpParameter, jskillParameter, jvacParameter, jdateParameter, jstatusParameter);
        }
    
        public virtual int sp_jobsearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearch", qryParameter);
        }
    
        public virtual int sp_applicatoninsert(Nullable<int> uid, Nullable<int> compid, Nullable<int> jid, string aresume, Nullable<System.DateTime> adate, string astatus)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var aresumeParameter = aresume != null ?
                new ObjectParameter("aresume", aresume) :
                new ObjectParameter("aresume", typeof(string));
    
            var adateParameter = adate.HasValue ?
                new ObjectParameter("adate", adate) :
                new ObjectParameter("adate", typeof(System.DateTime));
    
            var astatusParameter = astatus != null ?
                new ObjectParameter("astatus", astatus) :
                new ObjectParameter("astatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applicatoninsert", uidParameter, compidParameter, jidParameter, aresumeParameter, adateParameter, astatusParameter);
        }
    }
}
